syntax = "proto3";

package idl;

option go_package = "openiot/api/user";

import "base.proto";

service OpeniotUserService {
  rpc Ping(PingReq) returns (BaseRsp){};
  // interact with user table.
  rpc CreateUser(CreateUserReq) returns (CreateUserRsp) {}
  rpc RemoveUser(RemoveUserReq) returns (RemoveUserRsp) {}
  rpc UpdateUser(UpdateUserReq) returns (UpdateUserRsp) {}

  // interact with both user table and organization table.
  rpc GetUserInfo(GetUserInfoReq) returns (GetUserInfoRsp) {}
  rpc ListUserInfo(ListUserInfoReq) returns (ListUserInfoRsp) {}
}

message User {
  uint64 id = 1; // 用户id
  string name = 2; // 用户名称
  string email = 3; // 用户工作邮箱
  string phone_num = 4; // 用户手机号码
  string avatar = 5; // 用户头像地址
}
message UserInfo {
  User user = 1;
  repeated string position = 2; // 用户职位，从 Authority 表中读取
}


/** Request Collection, Req **/
message PingReq {
  string message = 1;
}
message CreateUserReq {
  optional string name = 2; // 用户名称
  optional string email = 3; // 用户工作邮箱
  optional string phone_num = 4; // 用户手机号码
  optional string avatar = 5; // 用户头像地址
}
message RemoveUserReq {
  uint64 id = 1;
}
message UpdateUserReq {
  uint64 id = 1; // 用户 ID
  string name = 2; // 用户名称
  string email = 3; // 用户工作邮箱
  string phone_num = 4; // 用户手机号码
  string avatar = 5; // 用户头像地址
}
message GetUserInfoReq {
  uint64 id = 1;
}
message ListUserInfoReq {

}


/** Response Collection, Rsp **/
//message BaseRsp {
//  int64 status_code = 1; // 状态码，0-成功，其他值-失败
//  string status_msg = 2; // 返回状态描述
//}
//message ListRsp {
//  int64 count = 1;      // list 总数
//  int64 page = 2;       // page number, default is 1.
//  int64 limit = 3;      // offset limit, default is 15
//}
message CreateUserRsp {
  BaseRsp base = 1;
}
message RemoveUserRsp {
  BaseRsp base = 1;
}
message UpdateUserRsp {
  BaseRsp base = 1;
}
message GetUserInfoRsp {
  BaseRsp base = 1;
  UserInfo user_info = 2;
}
message ListUserInfoRsp {
  BaseRsp base = 1;
  ListRsp list_info = 2;
  repeated UserInfo user_info_list = 3;
}
